/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface _Master_ {
  EmptyClass: EmptyClass;
  RuleData: RuleData;
  GetRuleTagsPayload: GetRuleTagsPayload;
  CartridgesPayload: CartridgesPayload;
  VerifyPayloadProxy: VerifyPayloadProxy;
  InsertCartridgePayload: InsertCartridgePayload;
  CartridgeRemoved: CartridgeRemoved;
  RuleCreated: RuleCreated;
  CartridgeInserted: CartridgeInserted;
  VerificationOutput: VerificationOutput;
  RemoveCartridgePayload: RemoveCartridgePayload;
  CartridgeInfo: CartridgeInfo;
  GetRulesPayload: GetRulesPayload;
  RuleTagsOutput: RuleTagsOutput;
  CartridgesOutput: CartridgesOutput;
  CartridgePayloadSplittable: CartridgePayloadSplittable;
  RulesOutput: RulesOutput;
  TransferCartridgePayload: TransferCartridgePayload;
  CartridgePayload: CartridgePayload;
}
export interface EmptyClass {}
export interface RuleData {
  cartridge_id: string;
  name: string;
  description: string;
  args: string;
  in_card: string;
  score_function: string;
  start: number;
  end: number;
  tags: string[];
}
export interface GetRuleTagsPayload {
  cartridge_id?: string;
}
export interface CartridgesPayload {
  name?: string;
  authors?: string[];
  tags?: string[];
  page?: number;
  page_size?: number;
  get_cover?: boolean;
}
export interface VerifyPayloadProxy {
  rule_id: string;
  outcard_hash: string;
  tape: string;
  claimed_score: number;
}
export interface InsertCartridgePayload {
  data: string;
}
export interface CartridgeRemoved {
  cartridge_id: string;
  timestamp: number;
}
export interface RuleCreated {
  rule_id: string;
  created_by: string;
  created_at: number;
}
export interface CartridgeInserted {
  cartridge_id: string;
  user_address: string;
  timestamp: number;
}
export interface VerificationOutput {
  version: string;
  cartridge_id: string;
  cartridge_input_index: number;
  cartridge_user_address: string;
  timestamp: number;
  score: number;
  rule_id: string;
  rule_input_index: number;
  tape_hash: string;
  tape_input_index: number;
  user_address: string;
  error_code: number;
  reserved: string;
}
export interface RemoveCartridgePayload {
  id: string;
}
export interface CartridgeInfo {
  id: string;
  name: string;
  user_address: string;
  authors: string[];
  info?: InfoCartridge;
  created_at: number;
  cover?: string;
}
export interface InfoCartridge {
  name: string;
  summary?: string;
  description?: string;
  version?: string;
  status?: string;
  tags: string[];
  authors?: Author[];
  url?: string;
}
export interface Author {
  name: string;
  link: string;
}
export interface GetRulesPayload {
  cartridge_id?: string;
  id?: string;
  ids?: string[];
  active_ts?: number;
  name?: string;
  page?: number;
  page_size?: number;
}
export interface RuleTagsOutput {
  tags: string[];
}
export interface CartridgesOutput {
  data: CartridgeInfo[];
  total: number;
  page: number;
}
export interface CartridgePayloadSplittable {
  id: string;
  part?: number;
}
export interface RulesOutput {
  data: RuleInfo[];
  total: number;
  page: number;
}
export interface RuleInfo {
  id: string;
  name: string;
  description: string;
  cartridge_id: string;
  created_by: string;
  created_at: number;
  args: string;
  in_card: string;
  score_function: string;
  n_tapes: number;
  n_verified: number;
  start?: number;
  end?: number;
  tags: string[];
}
export interface TransferCartridgePayload {
  id: string;
  new_user_address: string;
}
export interface CartridgePayload {
  id: string;
}
